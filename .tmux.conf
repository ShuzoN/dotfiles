# ログインシェルの指定
set-option -g default-shell /bin/zsh

# utf8を有効
# set-window-option -g utf8 on

# prefixキーをC-bに変更する
set -g prefix C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# vimとtmux間を移動
# http://takegue.hatenablog.com/entry/2015/01/26/031231
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h  if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j  if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k  if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l  if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-_  if-shell "$is_vim" "send-keys C-_"  "split-window -v"
bind -n C-\  if-shell "$is_vim" "send-keys C-\\" "split-window -h"
bind -n C-x  if-shell "$is_vim" "send-keys :q" "kill-pane"

# クリップボード共有を有効にする
# brew install reattach-to-user-namespace
# DON'T USE IT !!!! if you use below, vim copyboard will not work!!!
# set-option -g default-command ""
# set -g default-command ""
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# Ctrl-n でペインをローテーションしながら移動
bind -n C-n select-window -n

# C-b rで設定ファイルのリロード
bind r source-file ~/.tmux.conf

# ペインの縦"|", 横"-"で分割し,ペインの分割幅を均等にする
bind -n C-\ split-window -h 
bind -n C-_ split-window -v

# マウス操作を有効にする
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# コピーモードを設定する
# viのキーバインドを使用する
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Escape send -X clear-selection


# 256色端末を使用する
set -g default-terminal "xterm-256color"

# ==========================
#   ステータスバーの設定
# ==========================
# ステータスバーは以下の様な構造になっている
# [status-left][window-status][status-right]
# window-statusは,window名を表示する部分
# 設定のヒント
# http://qiita.com/nojima/items/9bc576c922da3604a72b

# ---- Status-bar general  ----
# 基本文字色設定
set -g status-fg colour255  #white
# 背景色設定
set -g status-bg colour236  #gray
# 上部に配置
set-option -g status-position top
# ---- Window-Status ----
# 中央揃え
set-option -g status-justify "centre"
# フォーマット指定
set-window-option -g window-status-format "#I: #W"
# カレントウィンドのフォーマット指定
set-window-option -g window-status-current-format "#[bg=colour32 bold] #I: #W #[default]"
# ---- Status-Left  ----
# 最大長指定
set-option -g status-left-length 30
# Session番号表示
set-option -g status-left "#[bg=colour239]#{?client_prefix,#[reverse],} [Session:#S] #[default]"
# ---- Status-Right ----
# 最大長指定
set-option -g status-right-length 80
# 時刻表示
set-option -g status-right "#[bg=colour239] #h [%H:%M]"
